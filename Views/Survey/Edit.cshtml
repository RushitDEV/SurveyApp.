@model SurveyApp.Models.Survey

@{
    ViewData["Title"] = "Anketi Düzenle";
}

<div class="container-fluid p-0 bg-light min-vh-100">
    <!-- Header -->
    <div class="bg-white border-bottom sticky-top">
        <div class="container py-3">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-light me-3">
                        <i class="bi bi-arrow-left"></i>
                    </a>
                    <h4 class="mb-0">Anketi Düzenle</h4>
                </div>
                <button type="button" onclick="updateSurvey()" class="btn btn-primary px-4">
                    <i class="bi bi-check-lg me-2"></i>Güncelle
                </button>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <!-- Survey Info Card -->
                <div class="card shadow-sm mb-4">
                    <div class="card-body p-4">
                        <div class="mb-4">
                            <label class="form-label fw-bold">Anket Baþlýðý *</label>
                            <input id="surveyTitle" type="text" class="form-control form-control-lg border-0 bg-light"
                                   value="@Model.Title" required />
                        </div>
                        <div class="mb-3">
                            <label class="form-label fw-bold">Açýklama</label>
                            <textarea id="surveyDescription" class="form-control border-0 bg-light"
                                      rows="3">@Model.Description</textarea>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="form-label fw-bold">Bitiþ Tarihi (Opsiyonel)</label>
                                <input id="surveyEndDate" type="date" class="form-control border-0 bg-light"
                                       value="@(Model.EndDate?.ToString("yyyy-MM-dd"))" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label fw-bold">Durum</label>
                                <select id="surveyIsActive" class="form-select border-0 bg-light">
                                    @if (Model.IsActive)
                                    {
                                        <option value="true" selected>Aktif</option>
                                        <option value="false">Pasif</option>
                                    }
                                    else
                                    {
                                        <option value="true">Aktif</option>
                                        <option value="false" selected>Pasif</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Questions Section -->
                <div class="card shadow-sm">
                    <div class="card-body p-4">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h5 class="mb-0 fw-bold">Sorular</h5>
                            <button type="button" class="btn btn-outline-primary" onclick="addQuestion()">
                                <i class="bi bi-plus-lg me-2"></i>Soru Ekle
                            </button>
                        </div>
                        <div id="questionsContainer">
                            @if (!Model.Questions.Any())
                            {
                                <div class="text-center py-5 text-muted" id="emptyState">
                                    <i class="bi bi-question-circle" style="font-size: 3rem;"></i>
                                    <p class="mt-3">Henüz soru eklenmedi</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let questionCount = @Model.Questions.Count;

    // Mevcut sorularý yükle
    window.addEventListener('DOMContentLoaded', function () {
        @foreach (var question in Model.Questions.OrderBy(q => q.Order))
        {
                <text>
                loadExistingQuestion(
                    '@question.QuestionText',
                    @((int)question.Type),
                    [@string.Join(",", question.Options.Select(o => "'" + o.OptionText + "'"))]
                );
                </text>
        }
    });

    function loadExistingQuestion(text, type, options) {
        questionCount++;
        const container = document.getElementById('questionsContainer');
        const emptyState = document.getElementById('emptyState');

        if (emptyState) {
            emptyState.remove();
        }

        const questionHtml = `
            <div class="question-card border rounded p-4 mb-3 bg-white" id="question_${questionCount}" data-question-id="${questionCount}">
                <div class="d-flex justify-content-between align-items-start mb-3">
                    <h6 class="mb-0 fw-bold">Soru ${questionCount}</h6>
                    <button type="button" class="btn btn-sm btn-link text-danger" onclick="removeQuestion(${questionCount})">
                        <i class="bi bi-trash"></i>
                    </button>
                </div>
                <input type="text" class="form-control mb-3 border-0 bg-light question-text"
                       value="${text}" placeholder="Sorunuzu buraya yazýn..." data-question-id="${questionCount}" required />
                <select class="form-select border-0 bg-light mb-3 question-type" data-question-id="${questionCount}" onchange="handleTypeChange(${questionCount}, this.value)">
                    <option value="1" ${type === 1 ? "selected" : ""}>Tek Seçmeli</option>
                    <option value="2" ${type === 2 ? "selected" : ""}>Çok Seçmeli</option>
                    <option value="3" ${type === 3 ? "selected" : ""}>Açýk Uçlu</option>
                </select>
                <div class="options-container" id="options_${questionCount}"></div>
            </div>
        `;

        container.insertAdjacentHTML('beforeend', questionHtml);

        // Seçenekleri yükle
        if (type !== 3 && options.length > 0) {
            const optionsContainer = document.getElementById(`options_${questionCount}`);
            optionsContainer.innerHTML = `
                <div class="mb-2">
                    <button type="button" class="btn btn-sm btn-outline-secondary" onclick="addOption(${questionCount})">
                        <i class="bi bi-plus me-1"></i>Seçenek Ekle
                    </button>
                </div>
            `;

            options.forEach((opt) => {
                const optionHtml = `
                    <div class="input-group mb-2 option-input">
                        <span class="input-group-text bg-light border-0">${String.fromCharCode(65 + options.indexOf(opt))}</span>
                        <input type="text" class="form-control border-0 bg-light" value="${opt}" />
                        <button class="btn btn-outline-danger" type="button" onclick="this.parentElement.remove()">
                            <i class="bi bi-x"></i>
                        </button>
                    </div>
                `;
                const button = optionsContainer.querySelector('button');
                button.insertAdjacentHTML('beforebegin', optionHtml);
            });
        } else if (type === 3) {
            handleTypeChange(questionCount, 3);
        } else {
            handleTypeChange(questionCount, type);
        }
    }

    function addQuestion() {
        questionCount++;
        const container = document.getElementById('questionsContainer');
        const emptyState = document.getElementById('emptyState');
        if (emptyState) emptyState.remove();

        const questionHtml = `
            <div class="question-card border rounded p-4 mb-3 bg-white" id="question_${questionCount}" data-question-id="${questionCount}">
                <div class="d-flex justify-content-between align-items-start mb-3">
                    <h6 class="mb-0 fw-bold">Soru ${questionCount}</h6>
                    <button type="button" class="btn btn-sm btn-link text-danger" onclick="removeQuestion(${questionCount})">
                        <i class="bi bi-trash"></i>
                    </button>
                </div>
                <input type="text" class="form-control mb-3 border-0 bg-light question-text"
                       placeholder="Sorunuzu buraya yazýn..." data-question-id="${questionCount}" required />
                <select class="form-select border-0 bg-light mb-3 question-type" data-question-id="${questionCount}" onchange="handleTypeChange(${questionCount}, this.value)">
                    <option value="1">Tek Seçmeli</option>
                    <option value="2">Çok Seçmeli</option>
                    <option value="3">Açýk Uçlu</option>
                </select>
                <div class="options-container" id="options_${questionCount}">
                    <div class="mb-2">
                        <button type="button" class="btn btn-sm btn-outline-secondary" onclick="addOption(${questionCount})">
                            <i class="bi bi-plus me-1"></i>Seçenek Ekle
                        </button>
                    </div>
                </div>
            </div>
        `;

        container.insertAdjacentHTML('beforeend', questionHtml);
    }

    function handleTypeChange(questionId, type) {
        const optionsContainer = document.getElementById(`options_${questionId}`);
        if (type === '3') {
            optionsContainer.innerHTML = '<p class="text-muted small mb-0"><i class="bi bi-info-circle me-1"></i>Açýk uçlu sorularda kullanýcýlar serbest metin yazabilir</p>';
        } else {
            optionsContainer.innerHTML = `
                <div class="mb-2">
                    <button type="button" class="btn btn-sm btn-outline-secondary" onclick="addOption(${questionId})">
                        <i class="bi bi-plus me-1"></i>Seçenek Ekle
                    </button>
                </div>
            `;
        }
    }

    function addOption(questionId) {
        const optionsContainer = document.getElementById(`options_${questionId}`);
        const optionCount = optionsContainer.querySelectorAll('.option-input').length + 1;

        const optionHtml = `
            <div class="input-group mb-2 option-input">
                <span class="input-group-text bg-light border-0">${String.fromCharCode(64 + optionCount)}</span>
                <input type="text" class="form-control border-0 bg-light" placeholder="Seçenek ${optionCount}" />
                <button class="btn btn-outline-danger" type="button" onclick="this.parentElement.remove()">
                    <i class="bi bi-x"></i>
                </button>
            </div>
        `;
        const button = optionsContainer.querySelector('button');
        button.insertAdjacentHTML('beforebegin', optionHtml);
    }

    function removeQuestion(id) {
        document.getElementById(`question_${id}`).remove();
        const container = document.getElementById('questionsContainer');
        if (container.children.length === 0) {
            container.innerHTML = `
                <div class="text-center py-5 text-muted" id="emptyState">
                    <i class="bi bi-question-circle" style="font-size: 3rem;"></i>
                    <p class="mt-3">Henüz soru eklenmedi</p>
                </div>
            `;
        }
    }

    function updateSurvey() {
        const title = document.getElementById('surveyTitle').value;
        const description = document.getElementById('surveyDescription').value;
        const endDate = document.getElementById('surveyEndDate').value;
        const isActive = document.getElementById('surveyIsActive').value === 'true';

        if (!title) {
            alert('Lütfen anket baþlýðý girin!');
            return;
        }

        const questions = [];
        document.querySelectorAll('.question-card').forEach(card => {
            const questionText = card.querySelector('.question-text').value;
            const questionType = parseInt(card.querySelector('.question-type').value);

            if (!questionText) return;

            const question = {
                questionText: questionText,
                type: questionType,
                options: []
            };

            if (questionType !== 3) {
                card.querySelectorAll('.option-input input').forEach(input => {
                    if (input.value) question.options.push(input.value);
                });
            }

            questions.push(question);
        });

        const data = {
            title: title,
            description: description,
            endDate: endDate || null,
            isActive: isActive,
            questions: questions
        };

        fetch('/Survey/Edit/@Model.Id', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                window.location.href = '/Survey/Details/@Model.Id';
            } else {
                alert('Bir hata oluþtu!');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Bir hata oluþtu!');
        });
    }
</script>

<style>
    .question-card {
        transition: all 0.2s;
    }

        .question-card:hover {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
</style>
